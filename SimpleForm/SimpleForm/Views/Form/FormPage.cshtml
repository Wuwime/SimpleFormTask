@using System.Text.Json.Serialization
@model SimpleForm.Models.FormViewModel
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
<!DOCTYPE html>

<html lang="cz">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" type="text/css" href="~/CSS/style.css"/>
    <title>Simple Form</title>
</head>
<body>

<div>
    <h3>LOGO</h3>
    <h1>NADPIS</h1>


    @if (Model is not null)
    {
        @if (Model.FormInput is not null)
        {
            <form asp-action="GetJsonResult" asp-controller="Form">@*here starts the first form*@
                <div>
                    <label for="name" class="namelabel">Jméno</label>
                    <input class="field name" type="text" id="name" name="name" value="@Model.FormInput.Name" required>
                    <label for="surName" class="surNameLabel">Příjmení</label>
                    <input class="field surName" type="text" name="surName" value="@Model.FormInput.SurName" required>
                </div>
                <div>
                    <label for="email" class="email emaillabel" >E-mail</label>
                    <input class="field email" type="Text" name="email" value="@Model.FormInput.Email" required>
                    @if (Model.Alert is not null)@*if email is not valid, we get an alert*@
                    {
                        <p style="color: red">@Model.Alert</p>
                    }
                    <br>
                    <label for="birth" class="birthlabel">Datum narození</label>
                    <input class="field birth"  type="date" name="birth" required>
                    <br>
                    <label for="regionIndex" class="regionlabel">Kraj</label>
                    <select class="field region">
                        @for (int i = 0; i< Model.ListOfRegions.Count;i++)@*listing regions*@
                        {
                            <option name="regionIndex" value="@i">@Model.ListOfRegions[i]</option>
                        }
                    </select>
                    <label for="react">REACT</label>
                    <input class="field" type="checkbox" name="react" value="@Model.FormInput.React">
                    <br>
                    <button type="submit">Uložit</button>
                </div>
            </form>
        }
        else
        {
            <form asp-action="GetJsonResult" asp-controller="Form">
                <div>
                    <label for="name" class="namelabel">Jméno</label>
                    <input class="field name" id="name" name="name" required>
                    <label for="surName" class="surNameLabel">Příjmení</label>
                    <input class="field surName" type="text" name="surName" required>
                </div>
                <div>
                    <label for="email" class="emaillabel">E-mail</label>
                    <input class="field email" type="Text" name="email" required>
                    <br>
                    <label for="birth" class="birthlabel">Datum narození</label>
                    <input class="field birth" type="date" name="birth" required>
                    <br>
                    <label for="regionIndex" class="regionlabel">Kraj</label>
                </div>
                <select class="field" id="region">@*listing regions again*@
                    @for (int i =0; i< Model.ListOfRegions.Count;i++)
                    {
                        <option name="regionIndex" value="@i">@Model.ListOfRegions[i]</option>
                    }

                </select>
            <br>
                <label for="react">REACT</label>
                <input class="field" type="checkbox" name="react" value="Yes">
                <br>
                <button type="submit">Uložit</button>
            </form>
        }
        <form asp-action="FromJsonToForm" asp-controller="Form" method="post">@*second form*@
            <button type="submit" id="loadbutton">Načíst</button>
            <br>

            @if (!string.IsNullOrEmpty(Model.TextAreaInputString))@*if there is text to be in the text area sent in response, this is where it gets processed*@
            {
                <textarea class="field" style="resize: none" rows="10" cols="50" name="textAreaInput">
         @Model.TextAreaInputString
          </textarea>
                @if (Model.Alert is not null)@*here come different kinds of alert. Depends on the status code*@
                {
                    <p style="color: red">@Model.Alert</p>
                }
            }
            else
            {
                <textarea class="field" style="resize: none" rows="10" cols="50" name="textAreaInput"></textarea>
            }
        </form>
    }

</div>
</body>
</html>